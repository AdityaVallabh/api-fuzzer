basePath: /en/api
consumes:
- application/json
externalDocs:
  description: Find out more about uvdesk api
  url: https://www.uvdesk.com/en/api-doc/
host: meqa.uvdesk.com
info:
  contact:
    email: support@uvdesk.com
  description: The UVdesk API correlates with the Representational State Transfer
    category (REST) that allows to perform several actions like reading, editing,
    deleting, adding data of the helpdesk system. Here, we are using subdomain in
    base path and Token Url. user must modify subdomain to his/her uvdesk subdomain
    for api access. If you want to download and use api client from top right section.
    Also then, you must replace subdomain with your subdomain name at uvdesk in downloaded
    client's baseUrl.
  termsOfService: https://www.uvdesk.com/en/terms
  title: Uvdesk api
  version: 1.0.0
paths:
  /agent-privilege/{id}.{_format}:
    delete:
      description: Delete existing privilege
      operationId: delete_api-agent-privilege
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "404":
          description: Returned when the resource is not found
          schema: {}
      summary: Delete existing privilege
      tags:
      - Agent privilege
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: Add privilege
      operationId: put_api-agent-privilege
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
      - description: name
        in: formData
        name: name
        type: string
      - description: description
        in: formData
        name: description
        type: string
      - description: array of privileges required like ROLE_AGENT_CREATE_TASK
        in: formData
        name: privileges
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "404":
          description: Returned when the resource is not found
          schema: {}
      summary: Add privilege
      tags:
      - Agent privilege
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /agent-privileges.{_format}:
    get:
      description: View all privilege
      operationId: get_api-agent-privileges
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - in: query
        name: sort
        type: string
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          schema:
            type: object
      summary: View all privilege
      tags:
      - Agent privilege
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Add privilege
      operationId: post_api-agent-privileges
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: name
        in: formData
        name: name
        type: string
      - description: description
        in: formData
        name: description
        type: string
      - description: array of privileges required like ROLE_AGENT_CREATE_TASK
        in: formData
        name: privileges
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "404":
          description: Returned when the resource is not found
          schema: {}
      summary: Add privilege
      tags:
      - Agent privilege
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /article/{article}/tags.{_format}:
    delete:
      consumes:
      - application/x-www-form-urlencoded
      description: delete tag from article
      operationId: delete_api-article-tags
      parameters:
      - in: path
        name: article
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: tagname required for POST
        in: formData
        name: name
        type: string
      - description: tagId required for DELETE
        in: formData
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "404":
          description: Returned when the page is not found
          schema: {}
      summary: delete tag from article
      tags:
      - Tag
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Add tag from article
      operationId: post_api-article-tags
      parameters:
      - in: path
        name: article
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: tagname required for POST
        in: formData
        name: name
        type: string
      - description: tagId required for DELETE
        in: formData
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "404":
          description: Returned when the page is not found
          schema: {}
      summary: Add tag from article
      tags:
      - Tag
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /company.{_format}:
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: edit company details
      operationId: put_api-company
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: support name
        in: formData
        name: name
        type: string
      - description: support email id
        in: formData
        name: supportEmail
        type: string
      - description: it should be kept greater than last ticket id
        in: formData
        name: nextTicketId
        type: string
      - description: timezone like Asia/Kolkata
        in: formData
        name: timezone
        type: string
      - description: no. of hours since customer last replied, to disable set to 0
        in: formData
        name: pendingSince
        type: string
      - description: mailbox id
        in: formData
        name: defaultMailbox
        type: string
      - description: default status
        in: formData
        name: defaultStatus
        type: string
      - description: default priority
        in: formData
        name: defaultPriority
        type: string
      - description: time format like m-d-y G:i
        in: formData
        name: timeFormat
        type: string
      - description: EmailTemplate of pending Notification
        in: formData
        name: pendingNotificationEmailTemplate
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "409":
          description: Returned when Conflict with existing resource
          schema: {}
      summary: edit company details
      tags:
      - Company
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /company/spam.{_format}:
    get:
      description: View company spam setting
      operationId: get_api-company-spam
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          schema:
            type: object
      summary: View company spam setting
      tags:
      - Company
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: edit Spam setting of company
      operationId: put_api-company-spam
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: blacklist
        in: formData
        name: blackList
        type: string
      - description: whiteList
        in: formData
        name: whiteList
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
      summary: edit Spam setting of company
      tags:
      - Company
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /company/theme.{_format}:
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: edit theme of company
      operationId: put_api-company-theme
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: company Name
        in: formData
        name: name
        type: string
      - description: domain name of website like webkul
        in: formData
        name: domain
        type: string
      - description: website name
        in: formData
        name: cName
        type: string
      - description: 0|1 for deactivated|activated
        in: formData
        name: status
        type: string
      - description: Jpg, Jpeg, Png images are allowed. (50x50 px)
        in: formData
        name: logo
        type: string
      - description: Jpg, Jpeg, Png images are allowed. (50x50 px)
        in: formData
        name: favicon
        type: string
      - description: Jpg, Jpeg, Png images are allowed. (50x50 px)
        in: formData
        name: banner
        type: string
      - description: css file
        in: formData
        name: customCSS
        type: string
      - description: page background color of theme
        in: formData
        name: pageBackgroundColor
        type: string
      - description: header background color of theme
        in: formData
        name: headerBackgroundColor
        type: string
      - description: navigation background color
        in: formData
        name: navTextColor
        type: string
      - description: link color of theme
        in: formData
        name: linkColor
        type: string
      - description: link hover color for theme
        in: formData
        name: linkHoverColor
        type: string
      - description: article text color for theme
        in: formData
        name: articleTextColor
        type: string
      - description: any required script fot theme
        in: formData
        name: script
        type: string
      - description: site description
        in: formData
        name: siteDescritption
        type: string
      - description: meta description
        in: formData
        name: metaDescription
        type: string
      - description: meta keywords to describe content on website
        in: formData
        name: metaKeywords
        type: string
      - description: home page content category|article
        in: formData
        name: homepageContent
        type: string
      - description: if login required to create tickets
        in: formData
        name: ticketCreateOption
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: edit theme of company
      tags:
      - Company
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /custom-field/{field}.{_format}:
    delete:
      description: delete existing custom-field
      operationId: delete_api-custom-field
      parameters:
      - in: path
        name: field
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
      summary: delete existing custom-field
      tags:
      - Custom Field
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: edit custom-field
      operationId: put_api-custom-field
      parameters:
      - in: path
        name: field
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: custom field name
        in: formData
        name: name
        type: string
      - description: 'options: customer,agent, both . To add customfield for customer
          or agent'
        in: formData
        name: agentType
        type: string
      - description: fieldType value like textarea, radio
        in: formData
        name: fieldType
        type: string
      - description: sort order of custom-field
        in: formData
        name: sortOrder
        type: string
      - description: array of groups
        in: formData
        name: dependency
        type: string
      - description: custom-field placeholder value to added in custom field
        in: formData
        name: value
        type: string
      - description: custom-field active status
        in: formData
        name: status
        type: string
      - description: is custom-field required?
        in: formData
        name: required
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "404":
          description: Returned when the page is not found
          schema: {}
      summary: Edit custom-field
      tags:
      - Custom Field
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /custom-field/order.{_format}:
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: Reorder CustomFields
      operationId: put_api-custom-field-order
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: assosiative array , in format customField-id:position
        in: formData
        name: sortorder
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "403":
          description: Returned when the Access Denied
          schema: {}
      summary: Reorder CustomFields
      tags:
      - Custom Field
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /custom-fields.{_format}:
    get:
      description: Returns a collection of custom-fields
      operationId: get_api-custom-fields
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - in: query
        name: sort
        type: string
      - in: query
        name: page
        type: string
      - description: search in custom-field names
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          schema:
            type: object
        "403":
          description: Returned when the Access Denied
          schema: {}
        "404":
          description: Returned when the page is not found
          schema: {}
      summary: Returns a collection of custom-fields
      tags:
      - Custom Field
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Add custom-field
      operationId: post_api-custom-fields
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: custom field name
        in: formData
        name: name
        type: string
      - description: 'options: customer,agent, both . To add customfield for customer
          or agent'
        in: formData
        name: agentType
        type: string
      - description: fieldType value like textarea, radio
        in: formData
        name: fieldType
        type: string
      - description: sort order of custom-field
        in: formData
        name: sortOrder
        type: string
      - description: array of groups
        in: formData
        name: dependency
        type: string
      - description: custom-field placeholder value to added in custom field
        in: formData
        name: value
        type: string
      - description: custom-field active status
        in: formData
        name: status
        type: string
      - description: is custom-field required?
        in: formData
        name: required
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "404":
          description: Returned when the page is not found
          schema: {}
      summary: Add custom-field
      tags:
      - Custom Field
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /customer/{id}.{_format}:
    delete:
      description: delete a given customer
      operationId: delete_api-customer
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "404":
          description: Returned when the resource is not found
          schema: {}
      summary: delete a given customer
      tags:
      - Customer
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    get:
      description: View a customer
      operationId: get_api-customer
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          schema:
            type: object
        "403":
          description: Returned when Acces Denied
          schema: {}
        "404":
          description: Returned when the resource is not found
          schema: {}
      summary: View a customer
      tags:
      - Customer
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    patch:
      description: add/remove star to customer
      operationId: patch_api-customer
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "404":
          description: Returned when the resource is not found
          schema: {}
      summary: add/remove star to customer
      tags:
      - Customer
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: edit existing customer
      operationId: put_api-customer
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
      - description: email id
        in: formData
        name: email
        type: string
      - description: first name
        in: formData
        name: firstName
        type: string
      - description: last name
        in: formData
        name: lastName
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "404":
          description: Returned when the page is not found
          schema: {}
        "409":
          description: Returned when conflict occurs
          schema: {}
      summary: edit existing customer
      tags:
      - Customer
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /customers.{_format}:
    get:
      description: Returns a collection of customers
      operationId: get_api-customers
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - in: query
        name: starred
        type: string
      - in: query
        name: isActive
        type: string
      - in: query
        name: sort
        type: string
      - in: query
        name: page
        type: string
      - description: search in all customer's name and email
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          schema:
            type: object
      summary: Returns a collection of customers
      tags:
      - Customer
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Add new Customer
      operationId: post_api-customers
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: email id
        in: formData
        name: email
        type: string
      - description: first name
        in: formData
        name: firstName
        type: string
      - description: last name
        in: formData
        name: lastName
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "404":
          description: Returned when the resource is not found
          schema: {}
        "409":
          description: Returned when the conflict occurs
          schema: {}
      summary: Add new Customer
      tags:
      - Customer
  /email-template/{template}.{_format}:
    delete:
      description: Delete email-Template
      operationId: delete_api-email-template
      parameters:
      - in: path
        name: _locale
        required: true
        type: string
      - in: path
        name: template
        required: true
        type: string
      - enum:
        - json
        - html
        in: path
        name: _format
        required: true
        type: string
      - in: query
        name: sort
        type: string
      - in: query
        name: page
        type: string
      - description: search email-Templates by name
        in: query
        name: search
        type: string
      produces:
      - application/json
      summary: Delete email-Template
      tags:
      - Email Template
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: Edit email-template
      operationId: put_api-email-template
      parameters:
      - in: path
        name: _locale
        required: true
        type: string
      - in: path
        name: template
        required: true
        type: string
      - enum:
        - json
        - html
        in: path
        name: _format
        required: true
        type: string
      - description: name of reply
        in: formData
        name: name
        type: string
      - description: subject of reply
        in: formData
        name: subject
        type: string
      - description: message (may be in html format, can contain placeholders like
          {%ticket.id%})
        in: formData
        name: message
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "404":
          description: Returned when the page is not found
          schema: {}
      summary: Edit email-template
      tags:
      - Email Template
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /email-templates.{_format}:
    get:
      description: Returns a collection of Email-Templates
      operationId: get_api-email-templates
      parameters:
      - in: path
        name: _locale
        required: true
        type: string
      - enum:
        - json
        - html
        in: path
        name: _format
        required: true
        type: string
      - in: query
        name: sort
        type: string
      - in: query
        name: page
        type: string
      - description: search email-Templates by name
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          schema:
            type: object
        "400":
          description: Returned when Bad Request
          schema: {}
        "404":
          description: Returned when the resource is not found
          schema: {}
      summary: Returns a collection of Email-Templates
      tags:
      - Email Template
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Add email-template
      operationId: post_api-email-templates
      parameters:
      - in: path
        name: _locale
        required: true
        type: string
      - enum:
        - json
        - html
        in: path
        name: _format
        required: true
        type: string
      - description: name of reply
        in: formData
        name: name
        type: string
      - description: subject of reply
        in: formData
        name: subject
        type: string
      - description: message (may be in html format, can contain placeholders like
          {%ticket.id%})
        in: formData
        name: message
        type: string
      produces:
      - application/json
      summary: Add email-template
      tags:
      - Email Template
  /filters.{_format}:
    get:
      description: Get filter data
      operationId: get_api-filters
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: to get group data
        format: int32
        in: query
        name: group
        type: integer
      - description: to get group data with corresponding subgroups
        format: int32
        in: query
        name: usergroup
        type: integer
      - description: to get team data
        format: int32
        in: query
        name: team
        type: integer
      - description: to get type data
        format: int32
        in: query
        name: type
        type: integer
      - description: to get priority data
        format: int32
        in: query
        name: priority
        type: integer
      - description: to get tag data
        format: int32
        in: query
        name: tag
        type: integer
      - description: to get mailbox data
        format: int32
        in: query
        name: mailbox
        type: integer
      - description: to get agent data
        format: int32
        in: query
        name: agent
        type: integer
      - description: to get customer data
        format: int32
        in: query
        name: customer
        type: integer
      - description: to get source data
        format: int32
        in: query
        name: source
        type: integer
      - description: to get current user's data like roles
        format: int32
        in: query
        name: userdata
        type: integer
      produces:
      - application/json
      responses:
        "200":
          schema:
            type: object
      summary: Get filter data
      tags:
      - Filter
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /group/{id}.{_format}:
    delete:
      description: Delete Group
      operationId: delete_api-group
      parameters:
      - in: path
        name: _locale
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "404":
          description: Returned when resource not found
          schema: {}
      summary: Delete Group
      tags:
      - Group
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: modify Group
      operationId: put_api-group
      parameters:
      - in: path
        name: _locale
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: name
        in: formData
        name: name
        type: string
      - description: description
        in: formData
        name: description
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "404":
          description: Returned when the resource is not found
          schema: {}
      summary: Modify Group
      tags:
      - Group
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /groups.{_format}:
    get:
      description: View Groups
      operationId: get_api-groups
      parameters:
      - in: path
        name: _locale
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - in: query
        name: sort
        type: string
      - description: 0|1
        in: query
        name: isActive
        type: string
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          schema:
            type: object
      summary: View Groups
      tags:
      - Group
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Add Group
      operationId: post_api-groups
      parameters:
      - in: path
        name: _locale
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: name
        in: formData
        name: name
        type: string
      - description: description
        in: formData
        name: description
        type: string
      produces:
      - application/json
      summary: Add Group
      tags:
      - Group
  /label/{id}.{_format}:
    delete:
      description: remove label
      operationId: delete_api-label
      parameters:
      - in: path
        name: _locale
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "404":
          description: Returned when the page is not found
          schema: {}
      summary: remove label
      tags:
      - Label
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: edit existing label
      operationId: put_api-label
      parameters:
      - in: path
        name: _locale
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: label name
        in: formData
        name: name
        type: string
      - description: label color
        in: formData
        name: color
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: edit existing label
      tags:
      - Label
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /labels.{_format}:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: 'add new label '
      operationId: post_api-labels
      parameters:
      - in: path
        name: _locale
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: label name
        in: formData
        name: name
        type: string
      produces:
      - application/json
      summary: 'add new label '
      tags:
      - Label
  /mailbox/{id}.{_format}:
    delete:
      consumes:
      - application/x-www-form-urlencoded
      description: Delete Mailbox
      operationId: delete_api-mailbox
      parameters:
      - in: path
        name: _locale
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: mailbox name
        in: formData
        name: name
        type: string
      - description: mailbox address
        in: formData
        name: email
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Delete Mailbox
      tags:
      - Mailbox
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: Edit Mailbox
      operationId: put_api-mailbox
      parameters:
      - in: path
        name: _locale
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: mailbox name
        in: formData
        name: name
        type: string
      - description: mailbox address
        in: formData
        name: email
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Edit Mailbox
      tags:
      - Mailbox
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /mailboxes.{_format}:
    get:
      description: Returns a collection of Mailboxes
      operationId: get_api-mailboxes
      parameters:
      - in: path
        name: _locale
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          schema:
            type: object
        "403":
          description: Returned when Access Forbidden
          schema: {}
      summary: Returns a collection of Mailboxes
      tags:
      - Mailbox
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Add Mailbox
      operationId: post_api-mailboxes
      parameters:
      - in: path
        name: _locale
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: mailbox name
        in: formData
        name: name
        type: string
      - description: mailbox address
        in: formData
        name: email
        type: string
      produces:
      - application/json
      summary: Add Mailbox
      tags:
      - Mailbox
  /member/{id}.{_format}:
    delete:
      description: Delete a given member
      operationId: delete_api-member
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "404":
          description: Returned when the resource is not found
          schema: {}
      summary: Delete a given member
      tags:
      - Agent
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    get:
      description: View a member
      operationId: get_api-member
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          schema:
            type: object
      summary: View a member
      tags:
      - Agent
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: edit existing member
      operationId: put_api-member
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: first name
        in: formData
        name: firstName
        type: string
      - description: last name
        in: formData
        name: lastName
        type: string
      - description: email
        in: formData
        name: email
        type: string
      - description: contact number
        in: formData
        name: contactNumber
        type: string
      - description: user's signature
        in: formData
        name: signature
        type: string
      - description: timezone like Asia/Kolkata
        in: formData
        name: timezone
        type: string
      - description: provide password in form of array of 'first' and  'second'
        in: formData
        name: password
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "403":
          description: Returned when Access forbidden
          schema: {}
        "404":
          description: Returned when the resource is not found
          schema: {}
      summary: edit existing member
      tags:
      - Agent
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /members.{_format}:
    get:
      description: Return a collection of members
      operationId: get_api-members
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - in: query
        name: starred
        type: string
      - in: query
        name: isActive
        type: string
      - in: query
        name: sort
        type: string
      - in: query
        name: page
        type: string
      - description: search in all member's name and email
        in: query
        name: search
        type: string
      - description: To get All members without pagination and with minimum data
        in: query
        name: fullList
        type: string
      produces:
      - application/json
      responses:
        "200":
          schema:
            type: object
      summary: Return a collection of members
      tags:
      - Agent
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Add new Member
      operationId: post_api-members
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: first name
        in: formData
        name: firstName
        type: string
      - description: last name
        in: formData
        name: lastName
        type: string
      - description: email
        in: formData
        name: email
        type: string
      - description: contact number
        in: formData
        name: contactNumber
        type: string
      - description: user's signature
        in: formData
        name: signature
        type: string
      - description: timezone like Asia/Kolkata
        in: formData
        name: timezone
        type: string
      - description: provide password in form of array of 'first' and  'second'
        in: formData
        name: password
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "404":
          description: Returned when the resource is not found
          schema: {}
      summary: Add new Member
      tags:
      - Agent
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /saved-reply/{template}.{_format}:
    delete:
      description: Delete existing savedReply
      operationId: delete_api-saved-reply
      parameters:
      - in: path
        name: template
        required: true
        type: string
      - enum:
        - json
        - html
        in: path
        name: _format
        required: true
        type: string
      - in: query
        name: sort
        type: string
      - in: query
        name: page
        type: string
      - description: search savedReply by name
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Delete existing savedReply
      tags:
      - Saved reply
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: edit reply
      operationId: put_api-saved-reply
      parameters:
      - in: path
        name: template
        required: true
        type: string
      - enum:
        - json
        - html
        in: path
        name: _format
        required: true
        type: string
      - description: name of reply
        in: formData
        name: name
        type: string
      - description: message (may be in html format)
        in: formData
        name: message
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "404":
          description: Returned when the resource is not found
          schema: {}
      summary: edit reply
      tags:
      - Saved reply
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /saved-replys.{_format}:
    get:
      description: Returns a collection of SavedReply
      operationId: get_api-saved-replys
      parameters:
      - enum:
        - json
        - html
        in: path
        name: _format
        required: true
        type: string
      - in: query
        name: sort
        type: string
      - in: query
        name: page
        type: string
      - description: search savedReply by name
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          schema:
            type: object
      summary: Returns a collection of SavedReply
      tags:
      - Saved reply
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Add reply
      operationId: post_api-saved-replys
      parameters:
      - enum:
        - json
        - html
        in: path
        name: _format
        required: true
        type: string
      - description: name of reply
        in: formData
        name: name
        type: string
      - description: message (may be in html format)
        in: formData
        name: message
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "404":
          description: Returned when the resource is not found
          schema: {}
      summary: Add reply
      tags:
      - Saved reply
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /sub-group/{id}.{_format}:
    delete:
      description: Delete existing Subgroup
      operationId: delete_api-sub-group
      parameters:
      - in: path
        name: _locale
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        - html
        in: path
        name: _format
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Delete existing Subgroup
      tags:
      - Team/subgroup
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: modify Subgroup
      operationId: put_api-sub-group
      parameters:
      - in: path
        name: _locale
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        - html
        in: path
        name: _format
        required: true
        type: string
      - description: name
        in: formData
        name: name
        type: string
      - description: description
        in: formData
        name: description
        type: string
      - description: array of subgroup ids
        in: formData
        name: groups
        type: string
      - description: array of users for subgroup/team
        in: formData
        name: users
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "404":
          description: Returned when the resource is not found
          schema: {}
      summary: modify Subgroup
      tags:
      - Team/subgroup
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /sub-groups.{_format}:
    get:
      description: View Subgroups
      operationId: get_api-sub-groups
      parameters:
      - in: path
        name: _locale
        required: true
        type: string
      - enum:
        - json
        - html
        in: path
        name: _format
        required: true
        type: string
      - in: query
        name: sort
        type: string
      - description: 0|1
        in: query
        name: isActive
        type: string
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          schema:
            type: object
      summary: View Subgroups
      tags:
      - Team/subgroup
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Add Subgroup
      operationId: post_api-sub-groups
      parameters:
      - in: path
        name: _locale
        required: true
        type: string
      - enum:
        - json
        - html
        in: path
        name: _format
        required: true
        type: string
      - description: name
        in: formData
        name: name
        type: string
      - description: description
        in: formData
        name: description
        type: string
      - description: array of subgroup ids
        in: formData
        name: groups
        type: string
      - description: array of users for subgroup/team
        in: formData
        name: users
        type: string
      produces:
      - application/json
      summary: Add Subgroup
      tags:
      - Team/subgroup
  /tag/{id}.{_format}:
    delete:
      description: delete a given Tag
      operationId: delete_api-tag
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      produces:
      - application/json
      summary: delete a given Tag
      tags:
      - Tag
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: edit existing Tag
      operationId: put_api-tag
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: new tag name
        in: formData
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "404":
          description: Returned when the page is not found
          schema: {}
      summary: edit existing Tag
      tags:
      - Tag
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /task/{id}.{_format}:
    delete:
      description: Delete existing task
      operationId: delete_api-task
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "404":
          description: Returned when the page is not found
          schema: {}
      summary: Delete existing task
      tags:
      - Task
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    get:
      description: View a Task
      operationId: get_api-task
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          schema:
            type: object
        "404":
          description: Returned when the resource is not found
          schema: {}
      summary: View a Task
      tags:
      - Task
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: update existing task
      operationId: put_api-task
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: priority id
        in: formData
        name: priority
        type: string
      - description: stage id
        in: formData
        name: stage
        type: string
      - description: subject
        in: formData
        name: subject
        type: string
      - description: assignedAgent id
        in: formData
        name: assignedAgent
        type: string
      - description: description
        in: formData
        name: description
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "404":
          description: Returned when the page is not found
          schema: {}
      summary: update existing task
      tags:
      - Task
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /task/{id}/follower.{_format}:
    delete:
      consumes:
      - application/x-www-form-urlencoded
      description: Remove Follower
      operationId: delete_api-task-follower
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: followerId
        in: formData
        name: followerId
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "404":
          description: Returned when the page is not found
          schema: {}
      summary: Remove Follower
      tags:
      - Task
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: add Follower
      operationId: post_api-task-follower
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: followerId
        in: formData
        name: followerId
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "404":
          description: Returned when the page is not found
          schema: {}
      summary: add Follower
      tags:
      - Task
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /task/{id}/thread.{_format}:
    delete:
      consumes:
      - application/x-www-form-urlencoded
      description: remove thread
      operationId: delete_api-task-thread
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: description
        in: formData
        name: description
        type: string
      - description: stage Id
        in: formData
        name: stage
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: remove thread
      tags:
      - Task
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: add thread
      operationId: post_api-task-thread
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: description
        in: formData
        name: description
        type: string
      - description: stage Id
        in: formData
        name: stage
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: add thread
      tags:
      - Task
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /tasks.{_format}:
    get:
      description: Returns a collection of Tasks
      operationId: get_api-tasks
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - in: query
        name: sort
        type: string
      - description: stageId 1|2|3 for New|in Progress|Done
        format: int32
        in: query
        name: stage
        type: integer
      - description: 'value: 1|2|3|4 for Low|medium|High|Urgent'
        format: int32
        in: query
        name: priority
        type: integer
      - in: query
        name: page
        type: string
      - description: search in all customer's name and email
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          schema:
            type: object
      summary: Returns a collection of Tasks
      tags:
      - Task
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Add new Task
      operationId: post_api-tasks
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: task subject
        in: formData
        name: subject
        type: string
      - description: task description
        in: formData
        name: description
        type: string
      - description: assignedAgent id
        in: formData
        name: assignedAgent
        type: string
      - description: task deadline
        in: formData
        name: deadline
        type: string
      - description: ticket Id
        in: formData
        name: ticket
        type: string
      - description: array of threadIds
        in: formData
        name: threadIds
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Add new Task
      tags:
      - Task
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /ticket-type/{id}.{_format}:
    delete:
      description: Delete existing TicketType
      operationId: delete_api-ticket-type
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "404":
          description: Returned when the resource is not found
          schema: {}
      summary: Delete existing TicketType
      tags:
      - Ticket type
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: Edit existing TicketType
      operationId: put_api-ticket-type
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: name
        in: formData
        name: name
        type: string
      - description: description
        in: formData
        name: description
        type: string
      - description: 'isActive values: 0|1  Note:will be 0 ,if not given'
        in: formData
        name: isActive
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "404":
          description: Returned when the page is not found
          schema: {}
      summary: Edit existing TicketType
      tags:
      - Ticket type
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /ticket-types.{_format}:
    get:
      description: Return a collection of TicketTypes
      operationId: get_api-ticket-types
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: 0|1
        in: query
        name: isActive
        type: string
      - in: query
        name: sort
        type: string
      - in: query
        name: page
        type: string
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          schema:
            type: object
      summary: Return a collection of TicketTypes
      tags:
      - Ticket type
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Add new TicketType
      operationId: post_api-ticket-types
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: name
        in: formData
        name: name
        type: string
      - description: description
        in: formData
        name: description
        type: string
      - description: 'isActive values: 0|1  Note:will be 0 ,if not given'
        in: formData
        name: isActive
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
      summary: Add new TicketType
      tags:
      - Ticket type
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /ticket/{id}.{_format}:
    delete:
      description: Delete a given ticket
      operationId: delete_api-ticket
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "404":
          description: Returned when the page is not found
          schema: {}
      summary: Delete a given ticket
      tags:
      - Ticket
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    get:
      description: View a ticket
      operationId: get_api-ticket
      parameters:
      - description: This api uses ticket IncrementId, while all other uses ticket
          id
        in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          schema:
            type: object
        "404":
          description: Returned when the page is not found
          schema: {}
      summary: View a ticket
      tags:
      - Ticket
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    patch:
      consumes:
      - application/x-www-form-urlencoded
      description: Edit given ticket's properties
      operationId: patch_api-ticket
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: 'property type that you want to edit. options : status|type|priority|group|label|star'
        in: formData
        name: editType
        type: string
      - description: value for corresponding property, optional for editType:star
        in: formData
        name: value
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "404":
          description: Returned when the page is not found
          schema: {}
      summary: Edit given ticket's properties
      tags:
      - Ticket
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: Edit given ticket
      operationId: put_api-ticket
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: 1|2|3|4|5|6 for open|pending|resolved|closed|Spam|Answered repectively
        in: formData
        name: type
        type: string
      - description: email address
        in: formData
        name: from
        type: string
      - description: reply content
        in: formData
        name: reply
        type: string
      - description: ticket subject
        in: formData
        name: subject
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Edit given ticket
      tags:
      - Ticket
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /ticket/{id}/collaborator.{_format}:
    delete:
      consumes:
      - application/x-www-form-urlencoded
      description: Remove collaborator from Ticket
      operationId: delete_api-ticket-collaborator
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: collaborator's Id
        in: formData
        name: collaboratorId
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Remove collaborator from Ticket
      tags:
      - Ticket
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Add collaborator for Ticket
      operationId: post_api-ticket-collaborator
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: collaborator email
        in: formData
        name: email
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Add collaborator for Ticket
      tags:
      - Ticket
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /ticket/{id}/tags.{_format}:
    delete:
      consumes:
      - application/x-www-form-urlencoded
      description: delete Tag from Ticket
      operationId: delete_api-ticket-tags
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: tagname required for POST
        in: formData
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "404":
          description: Returned when the page is not found
          schema: {}
      summary: delete Tag from Ticket
      tags:
      - Tickets
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Add Tag from Ticket
      operationId: post_api-ticket-tags
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: tagname required for POST
        in: formData
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "404":
          description: Returned when the page is not found
          schema: {}
      summary: Add Tag from Ticket
      tags:
      - Tickets
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /ticket/{id}/threads.{_format}:
    get:
      description: Returns a collection of threads
      operationId: get_api-ticket-threads
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          schema:
            type: object
        "404":
          description: Returned when the page is not found
          schema: {}
      summary: Returns a collection of threads
      tags:
      - Thread
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Add new Thread
      operationId: post_api-ticket-threads
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: 'threadtype: reply|forward|note'
        in: formData
        name: threadType
        type: string
      - description: main content of thread
        in: formData
        name: reply
        type: string
      - description: 'status id value: 1|2|3|4|5|6 for open|pending|resolved|closed|Spam|Answered
          repectively'
        in: formData
        name: status
        type: string
      - description: to in case of threadType:forward
        in: formData
        name: to
        type: string
      - description: attachements
        in: formData
        name: files
        type: string
      - description: admin can actAsType customer, agent
        in: formData
        name: actAsType
        type: string
      - description: provide with actAsType
        in: formData
        name: actAsEmail
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "401":
          description: Returned when helpdesk expired
          schema: {}
        "404":
          description: Returned when the page is not found
          schema: {}
      summary: Add new Thread
      tags:
      - Thread
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /ticket/{ticketId}/thread/{id}.{_format}:
    delete:
      description: DELETE thread
      operationId: delete_api-ticket-thread
      parameters:
      - in: path
        name: ticketId
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "404":
          description: Returned when the page is not found
          schema: {}
      summary: DELETE thread
      tags:
      - Thread
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    patch:
      description: lock/unlock thread
      operationId: patch_api-ticket-thread
      parameters:
      - in: path
        name: ticketId
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "404":
          description: Returned when the page is not found
          schema: {}
      summary: lock/unlock thread
      tags:
      - Thread
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: Edit existing thread
      operationId: put_api-ticket-thread
      parameters:
      - in: path
        name: ticketId
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: main content of thread
        in: formData
        name: reply
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "404":
          description: Returned when the page is not found
          schema: {}
      summary: Edit existing thread
      tags:
      - Thread
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /ticket/attachment/{id}.{_format}:
    get:
      description: download attachment
      operationId: get_api-ticket-attachment
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          schema:
            type: object
      summary: download attachment
      tags:
      - Ticket
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /tickets.{_format}:
    delete:
      consumes:
      - application/x-www-form-urlencoded
      description: Delete multiple Tickets
      operationId: delete_api-tickets
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: ticket ids to be deleted
        in: formData
        name: ids
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
      summary: Delete multiple Tickets
      tags:
      - Tickets
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    get:
      description: Return a Collection of Tickets
      operationId: get_api-tickets
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - in: query
        name: new
        type: string
      - in: query
        name: unassigned
        type: string
      - in: query
        name: mine
        type: string
      - in: query
        name: starred
        type: string
      - in: query
        name: trashed
        type: string
      - description: labelId
        in: query
        name: label
        type: string
      - description: statusId
        in: query
        name: status
        type: string
      - description: agentId
        in: query
        name: agent
        type: string
      - description: customerId
        in: query
        name: customer
        type: string
      - description: priorityId
        in: query
        name: priority
        type: string
      - description: groupId
        in: query
        name: group
        type: string
      - description: teamId
        in: query
        name: team
        type: string
      - description: tagId
        in: query
        name: tags
        type: string
      - description: mailboxId
        in: query
        name: mailbox
        type: string
      - in: query
        name: sort
        type: string
      - in: query
        name: page
        type: string
      - description: search for Ticket
        in: query
        name: search
        type: string
      - description: 'admin can actAs customer, options: customer, agent'
        in: query
        name: actAsType
        type: string
      - description: email of acted user
        in: query
        name: actAsEmail
        type: string
      produces:
      - application/json
      responses:
        "200":
          schema:
            type: object
      summary: Return a Collection of Tickets
      tags:
      - Tickets
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Add ticket
      operationId: post_api-tickets
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: 1|2|3|4|5|6 for open|pending|resolved|closed|Spam|Answered repectively
        in: formData
        name: type
        type: string
      - description: ticket name
        in: formData
        name: name
        type: string
      - description: email address
        in: formData
        name: from
        type: string
      - description: reply content
        in: formData
        name: reply
        type: string
      - description: ticket subject
        in: formData
        name: subject
        type: string
      - description: custom fields (if present) could be provided
        in: formData
        name: customFields
        type: string
      - description: admin can actAsType customer, agent
        in: formData
        name: actAsType
        type: string
      - description: provide when acting as agent
        in: formData
        name: actAsEmail
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "401":
          description: Returned when helpdesk expired
          schema: {}
        "404":
          description: Returned when the page is not found
          schema: {}
      summary: Add ticket
      tags:
      - Tickets
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /tickets/agent.{_format}:
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: Assign Agent to multiple Tickets
      operationId: put_api-tickets-agent
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: ticket ids
        in: formData
        name: ids
        type: string
      - description: agent id
        in: formData
        name: agentId
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
      summary: Assign Agent to multiple Tickets
      tags:
      - Tickets
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /tickets/group.{_format}:
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: change Group of multiple Tickets
      operationId: put_api-tickets-group
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: ticket ids
        in: formData
        name: ids
        type: string
      - description: group id
        in: formData
        name: groupId
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: change Group of multiple Tickets
      tags:
      - Tickets
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /tickets/label.{_format}:
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: add label to multiple Tickets
      operationId: put_api-tickets-label
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: ticket ids
        in: formData
        name: ids
        type: string
      - description: label id
        in: formData
        name: labelId
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
      summary: add label to multiple Tickets
      tags:
      - Tickets
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /tickets/priority.{_format}:
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: change Priority of multiple Tickets
      operationId: put_api-tickets-priority
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: ticket ids
        in: formData
        name: ids
        type: string
      - description: priority id
        in: formData
        name: priorityId
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
      summary: change Priority of multiple Tickets
      tags:
      - Tickets
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /tickets/restore.{_format}:
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: Restore multiple Tickets
      operationId: put_api-tickets-restore
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: ticket ids to be restored
        in: formData
        name: ids
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "404":
          description: Returned when the page is not found
          schema: {}
      summary: Restore multiple Tickets
      tags:
      - Tickets
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /tickets/status.{_format}:
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: change Status of multiple Tickets
      operationId: put_api-tickets-status
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: ticket ids
        in: formData
        name: ids
        type: string
      - description: status id
        in: formData
        name: statusId
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
      summary: change Status of multiple Tickets
      tags:
      - Tickets
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /tickets/trash.{_format}:
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: Trash multiple Tickets
      operationId: put_api-tickets-trash
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: ticket ids to be trashed
        in: formData
        name: ids
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Trash multiple Tickets
      tags:
      - Tickets
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /todo.{_format}:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Add Todo
      operationId: post_api-todo
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: for working on Task taskId is required
        in: formData
        name: taskId
        type: string
      - description: for working on Ticket ticketId is required
        in: formData
        name: threadId
        type: string
      - description: Desciption of Todo. required for POST Method
        in: formData
        name: description
        type: string
      - description: '0|1 for icncomplete|complete. default: 0 . required for PUT
          method'
        in: formData
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Add Todo
      tags:
      - Todo
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /todo/{id}.{_format}:
    delete:
      consumes:
      - application/x-www-form-urlencoded
      description: Delete Todo
      operationId: delete_api-todo
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: for working on Task taskId is required
        in: formData
        name: taskId
        type: string
      - description: for working on Ticket ticketId is required
        in: formData
        name: threadId
        type: string
      - description: Desciption of Todo. required for POST Method
        in: formData
        name: description
        type: string
      - description: '0|1 for icncomplete|complete. default: 0 . required for PUT
          method'
        in: formData
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Delete Todo
      tags:
      - Todo
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: Edit Todo
      operationId: put_api-todo
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: for working on Task taskId is required
        in: formData
        name: taskId
        type: string
      - description: for working on Ticket ticketId is required
        in: formData
        name: threadId
        type: string
      - description: Desciption of Todo. required for POST Method
        in: formData
        name: description
        type: string
      - description: '0|1 for icncomplete|complete. default: 0 . required for PUT
          method'
        in: formData
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Edit Todo
      tags:
      - Todo
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /workflow/{type}/{id}.{_format}:
    delete:
      description: delete a given Workflow
      operationId: delete_api-workflow
      parameters:
      - in: path
        name: type
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "403":
          description: Returned when the Access is forbidden
          schema: {}
      summary: delete a given Workflow
      tags:
      - Workflow
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: Edit Workflow
      operationId: put_api-workflow
      parameters:
      - in: path
        name: type
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: number
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: workflow name
        in: formData
        name: name
        type: string
      - description: 'action(s) to be performed . Contains subfields: type , value.
          Actions must be given in assosiative array format'
        in: formData
        name: actions
        type: string
      - description: 'required for type:1 i.e. automatic. Events on which workflow
          to be triggered. Contains subfields: event , trigger .'
        in: formData
        name: events
        type: string
      - description: 'conditions for workflow. Contains subfields: type, match, value
          .'
        in: formData
        name: conditions
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Edit Workflow
      tags:
      - Workflow
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /workflows.{_format}:
    get:
      description: View workflow details
      operationId: get_api-workflows
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          schema:
            type: object
      summary: View workflow details
      tags:
      - Workflow
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Add Workflow
      operationId: post_api-workflows
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: workflow name
        in: formData
        name: name
        type: string
      - description: workflow type 0|1 for manual|automatic
        in: formData
        name: type
        type: string
      - description: 'action(s) to be performed . Contains subfields: type , value.
          Actions must be given in assosiative array format'
        in: formData
        name: actions
        type: string
      - description: 'required for type:1 i.e. automatic. Events on which workflow
          to be triggered. Contains subfields: event , trigger .'
        in: formData
        name: events
        type: string
      - description: 'conditions for workflow. Contains subfields: type, match, value
          .'
        in: formData
        name: conditions
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Add Workflow
      tags:
      - Workflow
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
  /workflows/order.{_format}:
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: Reorder workflows
      operationId: put_api-workflows-order
      parameters:
      - enum:
        - json
        in: path
        name: _format
        required: true
        type: string
      - description: assosiative array , in format workflow-id:position
        in: formData
        name: auto
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Returned when Bad Request
          schema: {}
        "403":
          description: Returned when the Access Denied
          schema: {}
      summary: Reorder workflows
      tags:
      - Workflow
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
produces:
- application/json
schemes:
- https
security:
- password:
  - api
securityDefinitions:
  password:
    flow: password
    scopes:
      api: api access based on user role
    tokenUrl: https://subdomain.uvdesk.com/oauth/v2/token
    type: oauth2
swagger: "2.0"
